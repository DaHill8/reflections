Q:What happens when you initialize a repository? Why do you need to do it?
A:Git created .git directory with its files that are needed to git to work here.
Q:How is the staging area different from the working directory and the repository? What value do you think it offers?
A:Staging area contains only things that I want commit, so not all files in working directory, from repository is different that it only contains chnges in some files. I can work on all files in working directory but commit only some, for that we have staging area.
Q:How can you use the staging area to make sure you have one commit per logical change?
A:I can check the diff between working directory and stage are to see what will be in the commit or the change I will do to the repository by diff --staged.
Q:What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A:When I want develop two different versions of software at the same time, or to have some backup commit with readable name. Branches help with differentiation of these versions.
Q:How do the diagrams help you visualize the branch structure?
A:Each commit has its parrent, so by visualization I can see how commits and branches developed over time/commits/branches and where are forks/branches of the code.
Q:What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A:Combine the changes from both branches to one new commit. The representation in diagram vizualize the combination and new commit for that.
Q:What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
A:Pros:It is automated, Cons: Sometimes we need to resolve conflict by understanding both commits, what they really do to really resolve the conflict. Manually: Time-consuming, but we know exactly what we are doing.
