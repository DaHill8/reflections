Q:How did viewing a diff between two versions of a file help you see the bug that was introduced?
A:I see exactly and only the difference between the files, no other unchanged code as a distraction.
Q:How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
A:I can rollback past ideas and use them if latest ideas are not good, using past things in general.
Q:What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
A:Pros-functional change-give more sense to read commit logs and work with that;Cons-I must remember to actually commit.
Q:Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
A:Git is more for development and change might impact more files, Google docs wants track document changes mainly for backup or that the change impact only single file.
Q:How can you use the commands git log and git diff to view the history of files?
A:Git log for overview of commits, the change comment. And diff for comparing two commits, what have changed between them.
Q:How might using version control make you more confident to make changes that could break something?
A:I can come back to old code which worked or look at diff and control what can be the source of the problem.
Q:Now that you have your workspace set up, what do you want to try using Git for?
A:Coding and have good version control for that.